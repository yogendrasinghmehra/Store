@model Store.Web.ViewModels.Product.ViewModelProduct

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ViewModelProduct</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-4">
                <div style="padding-bottom:20px;"><h4>Product Details</h4></div>
               
                <div class="form-group">  
                    <label>Product Name</label>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })                   
                </div>

                <div class="form-group">
                   
                   <label>Product Category</label>
                        @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.ProductCategory, "CategoryId", "CategoryName"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    
                </div>

                <div class="form-group">
                   <label>Product Sub Category</label>
                        @Html.DropDownListFor(model => model.SubCategoryId, Enumerable.Empty<SelectListItem>(), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
                   
                </div>

                <div class="form-group">
                    <label>Select Brand</label>

                    @Html.DropDownListFor(model => model.BrandId, new SelectList(Model.ProductBrand, "BrandId", "BrandName"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })

                </div>
            </div>
            
            <div class="col-md-4">
                <div style="padding-bottom:20px;"><h4>Product Specification Details</h4></div>
                <div class="form-group">                  
                    <label>Product Quantity</label>
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                   
                </div>

                <div class="form-group">
                  
                      <label>Product Price</label>
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                  
                </div>

                <div class="form-group">
                    
                    <label>Product Stock</label>
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    
                </div>

                <div class="form-group">
                    <label>Poduct Description</label>

                    @Html.TextAreaFor(model => model.ProductDescription, new { @class = "form-control", @rows = "5" })
                    @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })

                </div>

            </div>
            
            <div class="col-md-4">
                <div style="padding-bottom:20px;"><h4>Product Specification Details</h4></div>
                <label>choose Product Color</label>
                <div class="form-group">
                    @foreach (var i in Model.ProductColor)
                    {
                        <input type="checkbox" value="@i.ColorId" /> @i.ColorText
                    }
                </div>

                <label>Choose Product Size</label>
                <div class="form-group">
                    @foreach (var i in Model.ProductSize)
                    {
                        <input type="checkbox" value="@i.SizeId" /> @i.SizeText
                    }
                </div>


            </div>

         
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model Store.Web.ViewModels.Product.ViewModelProduct

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Create","Products",FormMethod.Post,new { enctype= "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ViewModelProduct</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-4">
                <div style="padding-bottom:20px;"><h4>Product Details</h4></div>
               
                <div class="form-group">  
                    <label>Product Name</label>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })                   
                </div>

                <div class="form-group">
                   
                   <label>Product Category</label>
                        @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.ProductCategory, "CategoryId", "CategoryName"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    
                </div>

                <div class="form-group">
                   <label>Product Sub Category</label>
                        @Html.DropDownListFor(model => model.SubCategoryId, Enumerable.Empty<SelectListItem>(), "Select Sub Category", new { @class = "form-control" })                     
                   
                </div>
                <div class="form-group">
                    <label>Product Child Category</label>
                    @Html.DropDownListFor(model => model.ChildCategoryId, Enumerable.Empty<SelectListItem>(), "Select Child Category", new { @class = "form-control" })
                 

                </div>


                <div class="form-group">
                    <label>Select Brand</label>

                    @Html.DropDownListFor(model => model.BrandId, new SelectList(Model.ProductBrand, "BrandId", "BrandName"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })

                </div>
            </div>
            
            <div class="col-md-4">
                <div style="padding-bottom:20px;"><h4>Product Specification Details</h4></div>
                <div class="form-group">                  
                    <label>Product Quantity</label>
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                   
                </div>

                <div class="form-group">
                  
                      <label>Product Price</label>
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                  
                </div>

                <div class="form-group">
                    
                    <label>Product Stock</label>
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    
                </div>

                <div class="form-group">
                    <label>Poduct Description</label>

                    @Html.TextAreaFor(model => model.ProductDescription, new { @class = "form-control", @rows = "5" })
                    @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })

                </div>

            </div>
            
            <div class="col-md-4">
                <div style="padding-bottom:20px;"><h4>Product Specification Details</h4></div>
               
                <div class="form-group">
                    <label>choose Product Color</label><br />
                    @for(int i=0; i<Model.ProductColor.Count; i++)
                  {
                     
                      @Html.HiddenFor(m=>Model.ProductColor[i].ColorId)
                      @Html.HiddenFor(m => Model.ProductColor[i].ColorText)
                      <label class="checkbox-inline">
                       @Html.CheckBoxFor(m => Model.ProductColor[i].IsSelected) 
                       @Html.DisplayFor(m => Model.ProductColor[i].ColorText)                      
                      </label>
                     
                  }
                    @Html.ValidationMessageFor(model => model.ProductColor, "", new { @class = "text-danger" })
                </div>
                <hr />
               
                <div class="form-group">
                    <label>Choose Product Size</label><br />
                    @for (int i = 0; i < Model.ProductSize.Count; i++)
                   {
                       @Html.HiddenFor(m=>Model.ProductSize[i].SizeId)
                       @Html.HiddenFor(m=>Model.ProductSize[i].SizeText)
                       <label class="checkbox-inline">
                           @Html.CheckBoxFor(m=>Model.ProductSize[i].IsSelected)
                           @Html.DisplayFor(m=>Model.ProductSize[i].SizeText)
                       </label>
                   }

                </div>
                <hr />

                <div class="form-group">
                    <label>Choose Product Images</label><br />
                     <input type="file" multiple="multiple" accept=".jpg, .png, .gif" name="productImages" />                   

                </div>
                <hr />
                <div class="form-group">                
                        <input type="submit" value="Create" class="btn btn-default" />                    
                        <input type="reset" value="Clear" class="btn btn-dark" />
                </div>

                <div class="form-group">
                   
                </div>
            </div>

         
        </div>
        <hr />
        
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")     
   <script src="~/Areas/Admin/ViewScripts/Products/CreateViewScript.js"></script>
}




